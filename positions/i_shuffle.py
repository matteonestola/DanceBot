# Choregraphe bezier export in Python.

names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[-0.162965, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.0855211, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.162965, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0401426, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.162965, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0855211, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.162965, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0401426, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.162965, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0855211, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.162965, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0401426, [3, -0.266667, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[0.00414635, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.307178, [3, -0.253333, 0], [3, 0.266667, 0]], [0.00414634, [3, -0.266667, -0.102393], [3, 0.266667, 0.102393]], [0.307178, [3, -0.266667, 0], [3, 0.266667, 0]], [0.00414634, [3, -0.266667, 0.102393], [3, 0.266667, -0.102393]], [-0.307178, [3, -0.266667, 0], [3, 0.266667, 0]], [0.00414634, [3, -0.266667, -0.102393], [3, 0.266667, 0.102393]], [0.307178, [3, -0.266667, 0], [3, 0.266667, 0]], [0.00414634, [3, -0.266667, 0.102393], [3, 0.266667, -0.102393]], [-0.307178, [3, -0.266667, 0], [3, 0.266667, 0]], [0.00414634, [3, -0.266667, -0.102393], [3, 0.266667, 0.102393]], [0.307178, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LAnklePitch")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[0.0878904, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.813323, [3, -0.253333, 0], [3, 0.266667, 0]], [0.0878904, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.813323, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0878904, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.813323, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0878904, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.813323, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0878904, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.813323, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0878904, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.813323, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LAnkleRoll")
times.append([0.04, 1.6, 2.4, 3.2, 4.8, 5.6, 6.4, 8, 8.8])
keys.append([[-0.120527, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.120527, [3, -0.52, 0], [3, 0.266667, 0]], [-0.120527, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.120527, [3, -0.266667, 0], [3, 0.533333, 0]], [-0.120527, [3, -0.533333, 0], [3, 0.266667, 0]], [-0.120527, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.120527, [3, -0.266667, 0], [3, 0.533333, 0]], [-0.120527, [3, -0.533333, 0], [3, 0.266667, 0]], [-0.120527, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0.04, 1.6, 2.4, 3.2, 4.8, 5.6, 6.4, 8, 8.8])
keys.append([[-1.53333, [3, -0.0133333, 0], [3, 0.52, 0]], [-1.53333, [3, -0.52, 0], [3, 0.266667, 0]], [-1.53333, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.53333, [3, -0.266667, 0], [3, 0.533333, 0]], [-1.53333, [3, -0.533333, 0], [3, 0.266667, 0]], [-1.53333, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.53333, [3, -0.266667, 0], [3, 0.533333, 0]], [-1.53333, [3, -0.533333, 0], [3, 0.266667, 0]], [-1.53333, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.04, 1.6, 2.4, 3.2, 4.8, 5.6, 6.4, 8, 8.8])
keys.append([[-0.823919, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.823919, [3, -0.52, 0], [3, 0.266667, 0]], [-0.823919, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.823919, [3, -0.266667, 0], [3, 0.533333, 0]], [-0.823919, [3, -0.533333, 0], [3, 0.266667, 0]], [-0.823919, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.823919, [3, -0.266667, 0], [3, 0.533333, 0]], [-0.823919, [3, -0.533333, 0], [3, 0.266667, 0]], [-0.823919, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[0.8, [3, -0.0133333, 0], [3, 0.253333, 0]], [0, [3, -0.253333, 0], [3, 0.266667, 0]], [0.8, [3, -0.266667, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.266667, 0]], [0.8, [3, -0.266667, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.266667, 0]], [0.8, [3, -0.266667, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.266667, 0]], [0.8, [3, -0.266667, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.266667, 0]], [0.8, [3, -0.266667, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LHipPitch")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[0.122946, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.58294, [3, -0.253333, 0], [3, 0.266667, 0]], [0.122946, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.58294, [3, -0.266667, 0], [3, 0.266667, 0]], [0.122946, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.58294, [3, -0.266667, 0], [3, 0.266667, 0]], [0.122946, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.58294, [3, -0.266667, 0], [3, 0.266667, 0]], [0.122946, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.58294, [3, -0.266667, 0], [3, 0.266667, 0]], [0.122946, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.58294, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LHipRoll")
times.append([0.04, 1.6, 2.4, 3.2, 4.8, 5.6, 6.4, 8, 8.8])
keys.append([[0.0901686, [3, -0.0133333, 0], [3, 0.52, 0]], [0.0901686, [3, -0.52, 0], [3, 0.266667, 0]], [0.0901686, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0901686, [3, -0.266667, 0], [3, 0.533333, 0]], [0.0901686, [3, -0.533333, 0], [3, 0.266667, 0]], [0.0901686, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0901686, [3, -0.266667, 0], [3, 0.533333, 0]], [0.0901686, [3, -0.533333, 0], [3, 0.266667, 0]], [0.0901686, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LHipYawPitch")
times.append([0.04, 1.6, 2.4, 3.2, 4.8, 5.6, 6.4, 8, 8.8])
keys.append([[-0.163908, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.163908, [3, -0.52, 0], [3, 0.266667, 0]], [-0.163908, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.163908, [3, -0.266667, 0], [3, 0.533333, 0]], [-0.163908, [3, -0.533333, 0], [3, 0.266667, 0]], [-0.163908, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.163908, [3, -0.266667, 0], [3, 0.533333, 0]], [-0.163908, [3, -0.533333, 0], [3, 0.266667, 0]], [-0.163908, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LKneePitch")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[-0.0851167, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.4591, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.0851167, [3, -0.266667, 0], [3, 0.266667, 0]], [1.4591, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0851167, [3, -0.266667, 0], [3, 0.266667, 0]], [1.4591, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0851167, [3, -0.266667, 0], [3, 0.266667, 0]], [1.4591, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0851167, [3, -0.266667, 0], [3, 0.266667, 0]], [1.4591, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0851167, [3, -0.266667, 0], [3, 0.266667, 0]], [1.4591, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[-0.444578, [3, -0.0133333, 0], [3, 0.253333, 0]], [-2.08567, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.444579, [3, -0.266667, -0.332485], [3, 0.266667, 0.332485]], [-0.0907571, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.444579, [3, -0.266667, 0.332485], [3, 0.266667, -0.332485]], [-2.08567, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.444579, [3, -0.266667, -0.332485], [3, 0.266667, 0.332485]], [-0.0907571, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.444579, [3, -0.266667, 0.332485], [3, 0.266667, -0.332485]], [-2.08567, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.444579, [3, -0.266667, -0.332485], [3, 0.266667, 0.332485]], [-0.0907571, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.04, 1.6, 2.4, 3.2, 4.8, 5.6, 6.4, 8, 8.8])
keys.append([[0.501883, [3, -0.0133333, 0], [3, 0.52, 0]], [0.501883, [3, -0.52, 0], [3, 0.266667, 0]], [0.501883, [3, -0.266667, 0], [3, 0.266667, 0]], [0.501883, [3, -0.266667, 0], [3, 0.533333, 0]], [0.501883, [3, -0.533333, 0], [3, 0.266667, 0]], [0.501883, [3, -0.266667, 0], [3, 0.266667, 0]], [0.501883, [3, -0.266667, 0], [3, 0.533333, 0]], [0.501883, [3, -0.533333, 0], [3, 0.266667, 0]], [0.501883, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.04, 1.6, 2.4, 3.2, 4.8, 5.6, 6.4, 8, 8.8])
keys.append([[-1.23717, [3, -0.0133333, 0], [3, 0.52, 0]], [-1.23717, [3, -0.52, 0], [3, 0.266667, 0]], [-1.23717, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.23717, [3, -0.266667, 0], [3, 0.533333, 0]], [-1.23717, [3, -0.533333, 0], [3, 0.266667, 0]], [-1.23717, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.23717, [3, -0.266667, 0], [3, 0.533333, 0]], [-1.23717, [3, -0.533333, 0], [3, 0.266667, 0]], [-1.23717, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RAnklePitch")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[0.09, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.813323, [3, -0.253333, 0], [3, 0.266667, 0]], [0.09, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.813323, [3, -0.266667, 0], [3, 0.266667, 0]], [0.09, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.813323, [3, -0.266667, 0], [3, 0.266667, 0]], [0.09, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.813323, [3, -0.266667, 0], [3, 0.266667, 0]], [0.09, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.813323, [3, -0.266667, 0], [3, 0.266667, 0]], [0.09, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.813323, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RAnkleRoll")
times.append([0.04, 1.6, 2.4, 3.2, 4.8, 5.6, 6.4, 8, 8.8])
keys.append([[0.125933, [3, -0.0133333, 0], [3, 0.52, 0]], [0.125933, [3, -0.52, 0], [3, 0.266667, 0]], [0.125933, [3, -0.266667, 0], [3, 0.266667, 0]], [0.125933, [3, -0.266667, 0], [3, 0.533333, 0]], [0.125933, [3, -0.533333, 0], [3, 0.266667, 0]], [0.125933, [3, -0.266667, 0], [3, 0.266667, 0]], [0.125933, [3, -0.266667, 0], [3, 0.533333, 0]], [0.125933, [3, -0.533333, 0], [3, 0.266667, 0]], [0.125933, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[1.53333, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.54462, [3, -0.253333, 0], [3, 0.266667, 0]], [1.53333, [3, -0.266667, 0], [3, 0.266667, 0]], [1.53333, [3, -0.266667, 0], [3, 0.266667, 0]], [1.53333, [3, -0.266667, 0], [3, 0.266667, 0]], [1.54462, [3, -0.266667, 0], [3, 0.266667, 0]], [1.53333, [3, -0.266667, 0], [3, 0.266667, 0]], [1.53333, [3, -0.266667, 0], [3, 0.266667, 0]], [1.53333, [3, -0.266667, 0], [3, 0.266667, 0]], [1.54462, [3, -0.266667, 0], [3, 0.266667, 0]], [1.53333, [3, -0.266667, 0], [3, 0.266667, 0]], [1.53333, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.04, 1.6, 2.4, 3.2, 4.8, 5.6, 6.4, 8, 8.8])
keys.append([[0.823919, [3, -0.0133333, 0], [3, 0.52, 0]], [0.823919, [3, -0.52, 0], [3, 0.266667, 0]], [0.823919, [3, -0.266667, 0], [3, 0.266667, 0]], [0.823919, [3, -0.266667, 0], [3, 0.533333, 0]], [0.823919, [3, -0.533333, 0], [3, 0.266667, 0]], [0.823919, [3, -0.266667, 0], [3, 0.266667, 0]], [0.823919, [3, -0.266667, 0], [3, 0.533333, 0]], [0.823919, [3, -0.533333, 0], [3, 0.266667, 0]], [0.823919, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[0.8, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.12, [3, -0.253333, 0], [3, 0.266667, 0]], [0.8, [3, -0.266667, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.266667, 0]], [0.8, [3, -0.266667, 0], [3, 0.266667, 0]], [0.12, [3, -0.266667, 0], [3, 0.266667, 0]], [0.8, [3, -0.266667, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.266667, 0]], [0.8, [3, -0.266667, 0], [3, 0.266667, 0]], [0.12, [3, -0.266667, 0], [3, 0.266667, 0]], [0.8, [3, -0.266667, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RHipPitch")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[0.122946, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.58294, [3, -0.253333, 0], [3, 0.266667, 0]], [0.122946, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.58294, [3, -0.266667, 0], [3, 0.266667, 0]], [0.122946, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.58294, [3, -0.266667, 0], [3, 0.266667, 0]], [0.122946, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.58294, [3, -0.266667, 0], [3, 0.266667, 0]], [0.122946, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.58294, [3, -0.266667, 0], [3, 0.266667, 0]], [0.122946, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.58294, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RHipRoll")
times.append([0.04, 1.6, 2.4, 3.2, 4.8, 5.6, 6.4, 8, 8.8])
keys.append([[-0.0901686, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.0901686, [3, -0.52, 0], [3, 0.266667, 0]], [-0.0901686, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0901686, [3, -0.266667, 0], [3, 0.533333, 0]], [-0.0901686, [3, -0.533333, 0], [3, 0.266667, 0]], [-0.0901686, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0901686, [3, -0.266667, 0], [3, 0.533333, 0]], [-0.0901686, [3, -0.533333, 0], [3, 0.266667, 0]], [-0.0901686, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RHipYawPitch")
times.append([0.04, 1.6, 2.4, 3.2, 4.8, 5.6, 6.4, 8, 8.8])
keys.append([[-0.163908, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.163908, [3, -0.52, 0], [3, 0.266667, 0]], [-0.164061, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.163908, [3, -0.266667, 0], [3, 0.533333, 0]], [-0.163908, [3, -0.533333, 0], [3, 0.266667, 0]], [-0.164061, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.163908, [3, -0.266667, 0], [3, 0.533333, 0]], [-0.163908, [3, -0.533333, 0], [3, 0.266667, 0]], [-0.164061, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RKneePitch")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[-0.0820332, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.4591, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.0820331, [3, -0.266667, 0], [3, 0.266667, 0]], [1.4591, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0820331, [3, -0.266667, 0], [3, 0.266667, 0]], [1.4591, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0820331, [3, -0.266667, 0], [3, 0.266667, 0]], [1.4591, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0820331, [3, -0.266667, 0], [3, 0.266667, 0]], [1.4591, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0820331, [3, -0.266667, 0], [3, 0.266667, 0]], [1.4591, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[-0.444578, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.0610865, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.444579, [3, -0.266667, 0.33743], [3, 0.266667, -0.33743]], [-2.08567, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.444579, [3, -0.266667, -0.33743], [3, 0.266667, 0.33743]], [-0.0610865, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.444579, [3, -0.266667, 0.33743], [3, 0.266667, -0.33743]], [-2.08567, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.444579, [3, -0.266667, -0.33743], [3, 0.266667, 0.33743]], [-0.0610865, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.444579, [3, -0.266667, 0.33743], [3, 0.266667, -0.33743]], [-2.08567, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.4, 7.2, 8, 8.8])
keys.append([[-0.501883, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.413643, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.501883, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.501883, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.501883, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.413643, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.501883, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.501883, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.501883, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.413643, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.501883, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.501883, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.04, 1.6, 2.4, 3.2, 4.8, 5.6, 6.4, 8, 8.8])
keys.append([[1.23717, [3, -0.0133333, 0], [3, 0.52, 0]], [1.23717, [3, -0.52, 0], [3, 0.266667, 0]], [1.23717, [3, -0.266667, 0], [3, 0.266667, 0]], [1.23717, [3, -0.266667, 0], [3, 0.533333, 0]], [1.23717, [3, -0.533333, 0], [3, 0.266667, 0]], [1.23717, [3, -0.266667, 0], [3, 0.266667, 0]], [1.23717, [3, -0.266667, 0], [3, 0.533333, 0]], [1.23717, [3, -0.533333, 0], [3, 0.266667, 0]], [1.23717, [3, -0.266667, 0], [3, 0, 0]]])


